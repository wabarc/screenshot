name: Testing

on:
  push:
    branches:
      - "**"
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "Makefile"
      - ".github/workflows/testing.yml"
  pull_request:
    branches:
      - main
      - develop
    types: [ opened, synchronize, reopened ]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "Makefile"
      - ".github/workflows/testing.yml"

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go: [ "1.18", "1.19" ]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # v1.5.0
        with:
          egress-policy: audit
          disable-telemetry: true

      - name: Set up Go 1.x
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v3.3.1
        with:
          go-version: ${{ matrix.go }}

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@37c79b7f0199cec79c8b6a414e806d88c8662bdd
        with:
          chrome-version: stable

      - name: Check out code base
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          fetch-depth: 0

      - name: Check out code base
        if: github.event_name == 'pull_request'
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache go module
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # v3.0.11
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Run test
        env:
          CGO_ENABLED: 1
        run: |
          go test -v -race -cover -covermode=atomic ./...
