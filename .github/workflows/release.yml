name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ linux, windows, darwin ]
        arch: [ amd64, 386 ]
        include:
          - os: linux
            arch: arm64
          - os: darwin
            arch: arm64
        exclude:
          - os: darwin
            arch: 386
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      GOARM: ${{ matrix.arm }}
      GOMIPS: ${{ matrix.mips }}
      GOMIPS64: ${{ matrix.mips64 }}
      GOMIPSLE: ${{ matrix.mipsle }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: List checked-out code
      run: ls -al

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Build fat binary
      id: builder
      run: |
        ARGS="${GOOS}-${GOARCH}"
        if [[ -n "${GOARM}" ]]; then
          ARGS="${ARGS}v${GOARM}"
        elif [[ -n "${GOMIPS}" ]]; then
          ARGS="${ARGS}-${GOMIPS}"
        elif [[ -n "${GOMIPS64}" ]]; then
          ARGS="${ARGS}-${GOMIPS64}"
        elif [[ -n "${GOMIPSLE}" ]]; then
          ARGS="${ARGS}-${GOMIPSLE}"
        fi
        make ${ARGS}
        echo "::set-output name=args::${ARGS}"

    - name: Archive binary
      run: make TARGET=${{ steps.builder.outputs.args }} releases

    - name: Upload archived binary
      uses: actions/upload-artifact@v2
      with:
        name: screenshot
        path: build/package/screenshot*

  checksum:
    name: Get archived packages checksum
    runs-on: ubuntu-latest
    needs: [ build ]
    outputs:
      digest: ${{ steps.digest.outputs.result }}
    steps:
    - name: Download math result from build job
      uses: actions/download-artifact@v2
      with:
        name: screenshot
        path: .

    - name: Create all binary digest
      id: digest
      run: |
        digest=$(find screenshot* -type f -exec sha256sum {} +)
        digest="${digest//$'%'/%25}"
        digest="${digest//$'\n'/%0A}"
        echo "::set-output name=result::$digest"

  release:
    name: Create and upload release
    runs-on: ubuntu-latest
    needs: [build, checksum]
    steps:
    - name: Download math result from build and checksum jobs
      uses: actions/download-artifact@v2
      with:
        name: screenshot
        path: screenshot

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          **Digests in this release:**

          ```
          ${{ needs.checksum.outputs.digest }}
          ```
        draft: false
        prerelease: true

    - name: Upload release assets
      uses: fnkr/github-action-ghr@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GHR_PATH: screenshot/
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
